//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ToolBX.Collections.Inventory.Resources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Exceptions {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Exceptions() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ToolBX.Collections.Inventory.Resources.Exceptions", typeof(Exceptions).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Can&apos;t add more items to collection : Number of items is greater than the maximum stack size of {0}.
        /// </summary>
        internal static string CannotAddItemBecauseMaximumIsReached {
            get {
                return ResourceManager.GetString("CannotAddItemBecauseMaximumIsReached", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Can&apos;t add more items to collection : {0} is greater than the maximum stack size of {1}.
        /// </summary>
        internal static string CannotAddItemBecauseQuantityIsGreaterThanMaximum {
            get {
                return ResourceManager.GetString("CannotAddItemBecauseQuantityIsGreaterThanMaximum", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Can&apos;t add {0} to collection : quantity must be greater than zero but its value was {1}.
        /// </summary>
        internal static string CannotAddItemBecauseQuantityMustBeGreaterThanZero {
            get {
                return ResourceManager.GetString("CannotAddItemBecauseQuantityMustBeGreaterThanZero", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Can&apos;t add item using predicate : quantity must be greater than zero but its value was {0}.
        /// </summary>
        internal static string CannotAddItemUsingPredicateBecauseQuantityMustBeGreaterThanZero {
            get {
                return ResourceManager.GetString("CannotAddItemUsingPredicateBecauseQuantityMustBeGreaterThanZero", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Can&apos;t add item using predicate : there is no match in the collection for &apos;{0}&apos;.
        /// </summary>
        internal static string CannotAddItemUsingPredicateBecauseThereIsNoMatch {
            get {
                return ResourceManager.GetString("CannotAddItemUsingPredicateBecauseThereIsNoMatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Can&apos;t instantiate {0} : stackSize must be greater than zero but its value was {1}.
        /// </summary>
        internal static string CannotInstantiateBecauseStackSizeMustBeGreaterThanZero {
            get {
                return ResourceManager.GetString("CannotInstantiateBecauseStackSizeMustBeGreaterThanZero", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Can&apos;t remove {0} from collection : the item has no entry in collection.
        /// </summary>
        internal static string CannotRemoveItemBecauseItIsNotInCollection {
            get {
                return ResourceManager.GetString("CannotRemoveItemBecauseItIsNotInCollection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Can&apos;t remove {0} from collection : trying to remove {1} from stock but its current quantity is only {2}.
        /// </summary>
        internal static string CannotRemoveItemBecauseQuantityIsGreaterThanStock {
            get {
                return ResourceManager.GetString("CannotRemoveItemBecauseQuantityIsGreaterThanStock", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Can&apos;t remove {0} from collection : quantity must be greater than zero but its value was {1}.
        /// </summary>
        internal static string CannotRemoveItemBecauseQuantityMustBeGreaterThanZero {
            get {
                return ResourceManager.GetString("CannotRemoveItemBecauseQuantityMustBeGreaterThanZero", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Can&apos;t remove item using predicate : quantity must be greater than zero but its value was {0}.
        /// </summary>
        internal static string CannotRemoveItemUsingPredicateBecauseQuantityMustBeGreaterThanZero {
            get {
                return ResourceManager.GetString("CannotRemoveItemUsingPredicateBecauseQuantityMustBeGreaterThanZero", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Can&apos;t remove item using predicate : there is no match in the collection for &apos;{0}&apos;.
        /// </summary>
        internal static string CannotRemoveItemUsingPredicateBecauseThereIsNoMatch {
            get {
                return ResourceManager.GetString("CannotRemoveItemUsingPredicateBecauseThereIsNoMatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Quantity must be at least 1.
        /// </summary>
        internal static string QuantityMustBePositive {
            get {
                return ResourceManager.GetString("QuantityMustBePositive", resourceCulture);
            }
        }
    }
}
